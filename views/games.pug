extends layout

block content
  script.
    const rainbow_full = [
      'rgb(253,163,180)',
      'rgb(253,195,163)',
      'rgb(253,242,163)',
      'rgb(204,253,163)',
      'rgb(163,253,170)',
      'rgb(163,253,217)',
      'rgb(163,253,249)',
      'rgb(163,221,253)',
      'rgb(163,170,253)',
      'rgb(212,163,253)' ];

    $(document).ready(function() {
      // Set the text colour of all rating values to a rainbow colour
      $('.rating').each(function(i, obj) {
        $(this).css('color', rainbow_full[Math.round($(this).text()) - 1]);
      });

      // Make tags look better
      $('.tag').each(function(i, obj) {
        if ($(this).text().indexOf(':') > -1) {
          const type = $(this).text().split(':')[0];
          const text = $(this).text().split(':')[1];
          $(this).text(text);

          if (type == 'type') {
            let colour;
            let colour2;

            if (text == 'RPG Maker' || text == 'RPG') {
              colour  = 'rgb(255,100,100)';
              colour2 = 'rgba(255,100,100,.2)';
            }
            else if (text == 'STG') {
              colour  = 'rgb(255,150,100)';
              colour2 = 'rgba(255,150,100,.2)';
            }
            else if (text == 'Tower Defense') {
              colour  = 'rgb(255,255,150)';
              colour2 = 'rgba(255,255,150,.2)';
            }
            else if (text == 'Fighter') {
              colour  = 'rgb(150,255,150)';
              colour2 = 'rgba(150,255,150,.2)';
            }
            else if (text == 'Visual Novel') {
              colour  = 'rgb(150,255,255)';
              colour2 = 'rgba(150,255,255,.2)';
            }
            else if (text == 'Puzzle') {
              colour  = 'rgb(100,150,255)';
              colour2 = 'rgba(100,150,255,.2)';
            }
            else if (text == 'Platformer') {
              colour  = 'rgb(200,150,255)';
              colour2 = 'rgba(200,150,255,.2)';
            }
            else if (text == 'Yume Nikki-Like') {
              colour  = 'rgb(255,150,200)';
              colour2 = 'rgba(255,150,200,.2)';
            }
            else {
              colour  = 'rgb(255,255,255)';
              colour2 = 'rgba(255,255,255,.2)';
            }

            $(this).css('padding-left',   '5px');
            $(this).css('padding-right',  '5px');
            $(this).css('border-left',    '2px ' + colour + 'solid');
            $(this).css('background',     colour2);
            $(this).css('color',          colour);
          }
          else if (type == 'genre') {
            $(this).css('padding-left',  '5px');
            $(this).css('padding-right', '5px');
            $(this).css('border-left',   '2px rgb(100,200,255) solid');
            $(this).css('background',    'rgba(100,200,255,.2)');
          }
          else if (type == 'meta') {
            $(this).css('padding-left',  '5px');
            $(this).css('padding-right', '5px');
            $(this).css('border-left',   '2px rgb(0,0,0) solid');
            $(this).css('background',    'rgb(0,0,0)');
          }
        }
        else {
          $(this).css('padding-left',  '5px');
          $(this).css('padding-right', '5px');
          $(this).css('border-left',   '2px rgb(128,128,128) solid');
          $(this).css('background',    'rgba(128,128,128,.2)');
        }
      });
    });


  div.content
    table.list
      tr.header
        td <p>Creator</p>
        td <p>Title <span class='small subdued highlight-bg'># Releases</span></p>
        td <p>Aliases</p>
        td <p>Tags</p>
        td <p>Rating <span class='subdued'>(Bayesian)</span></p>
        td <p>Average Rating</p>
        td <p># Ratings</p>

      each g in games
        tr.item(onclick='window.location.href="/games/' + g.id + '";')
          td
            div.games-creator.no-overflow
              p.subdued= g.creator

          td
            div.games-title.no-overflow
              p
                | <a href='/games/#{g.id}'>#{g.title}
                if g.title_romaji
                  | &nbsp;<span class='subdued'>(#{g.title_romaji})</span>
                if g.n_releases > 0
                  | &nbsp;<span class='small subdued highlight-bg'>#{g.n_releases}</span>
                | </a>

          td
            p <span class='subdued'>#{g.aliases}</span>

          td
            div.games-tag-list.no-overflow
              if g.tags
                each t in g.tags.split(',')
                  p.tag.same-line= t

          td
            p.rating= g.rating_bayesian

          td
            if g.rating_average
              p.rating= parseFloat(g.rating_average.toFixed(2))

          td
            p= g.n_ratings
